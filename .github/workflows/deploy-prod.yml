name: Deploy to cPanel

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DEV_REMOTE_DIR: dev.ecole-st-augustin.fr/v2/app
      PROD_REMOTE_DIR: prod.ecole-st-augustin.fr/v2/app
      DEV_CPANEL_USERNAME: ${{ secrets.DEV_CPANEL_FTP_USERNAME }}
      PROD_CPANEL_USERNAME: ${{ secrets.PROD_CPANEL_FTP_USERNAME }}
      DEV_CPANEL_PASSWORD: ${{ secrets.DEV_CPANEL_FTP_PASSWORD_BASE64 }}
      PROD_CPANEL_PASSWORD: ${{ secrets.PROD_CPANEL_FTP_PASSWORD_BASE64 }}

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Cache Node.js modules
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 3. Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.16.0'
          cache: 'npm'

      # 4. Install dependencies
      - name: Install dependencies
        run: npm ci # Faster and cleaner than `npm install`

      # 5. Build project
      - name: Build
        run: npm run build

      # 6. Lint code
      - name: Run Lint
        run: npm run lint

      # 7. Set environment variables based on branch
      - name: Set environment variables based on branch
        id: set-env-vars
        run: |
          if [ $GITHUB_REF == 'refs/heads/main' ]; then
            echo "REMOTE_DIR=${{ env.PROD_REMOTE_DIR }}" >> $GITHUB_ENV
            echo "CPANEL_USERNAME=${{ env.PROD_CPANEL_USERNAME }}" >> $GITHUB_ENV
            echo "CPANEL_PASSWORD=$(echo '${{ env.PROD_CPANEL_PASSWORD }}' | base64 --decode | tr -d '\n')" >> $GITHUB_ENV
          else
            echo "REMOTE_DIR=${{ env.DEV_REMOTE_DIR }}" >> $GITHUB_ENV
            echo "CPANEL_USERNAME=${{ env.DEV_CPANEL_USERNAME }}" >> $GITHUB_ENV
            echo "CPANEL_PASSWORD=$(echo '${{ env.DEV_CPANEL_PASSWORD }}' | base64 --decode | tr -d '\n')" >> $GITHUB_ENV
          fi

      # 8. Upload to cPanel via FTP
      - name: Upload to cPanel via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.CPANEL_FTP_HOST }}
          username: ${{ env.CPANEL_USERNAME }}
          password: ${{ env.CPANEL_PASSWORD }}
          local-dir: ./ # Only deploy built files
          remote-dir: ${{ env.REMOTE_DIR }}
          dangerous-clean-slate: false
          exclude: |
            **/*.map
            **/node_modules/**
            **.git/**
            **.github/**
            **.env**
            **/tests/
            .next/**
            **/dist/**
            **/coverage/**
